#+TITLE: environment

#+name: inputs
#+begin_src nix :exports code :nowef-ref inputs :tangle no
  inputs = {
    # nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-23.05-darwin";
    nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
    home-manager.url = "github:nix-community/home-manager";
    home-manager.inputs.nixpkgs.follows = "nixpkgs";
    darwin.url = "github:lnl7/nix-darwin";
    darwin.inputs.nixpkgs.follows = "nixpkgs";
    emacs-overlay.url = "github:nix-community/emacs-overlay";
  };
#+end_src

#+name: outputs
#+begin_src nix :exports code :noweb-ref outputs :tangle no
  outputs = { self, nixpkgs, home-manager, darwin, emacs-overlay }: 
    let
	    overlays = [emacs-overlay.overlay];
    in {
	    darwinConfigurations."Jacks-MBP" = darwin.lib.darwinSystem {
	      system = "aarch64-darwin";
	      modules = [
		home-manager.darwinModules.home-manager
		{
			nixpkgs.overlays = overlays;
		}
		./hosts/Jacks-MBP/default.nix
	      ];
	    };
    };
#+end_src

#+begin_src nix :noweb yes :tangle test.nix
  {
    <<inputs>>
    <<outputs>>
  }
#+end_src

#+begin_src nix
  {
    description = "A very basic flake";

    inputs = {
      # nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-23.05-darwin";
      nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
      home-manager.url = "github:nix-community/home-manager";
      home-manager.inputs.nixpkgs.follows = "nixpkgs";
      darwin.url = "github:lnl7/nix-darwin";
      darwin.inputs.nixpkgs.follows = "nixpkgs";
      emacs-overlay.url = "github:nix-community/emacs-overlay";
    };

    outputs = { self, nixpkgs, home-manager, darwin, emacs-overlay }: 
      let
	overlays = [emacs-overlay.overlay];
      in {
	darwinConfigurations."Jacks-MBP" = darwin.lib.darwinSystem {
	  system = "aarch64-darwin";
	  modules = [
	    home-manager.darwinModules.home-manager
	    {
	      nixpkgs.overlays = overlays;
	    }
	    ./hosts/Jacks-MBP/default.nix
	  ];
	};
      };
  }
#+end_src

#+begin_src nix
  { pkgs, ...}:
  { 
    services.nix-daemon.enable = true;
    nix = {
      package = pkgs.nixFlakes;
      extraOptions = ''
	experimental-features = nix-command flakes
      '';
    };

    programs.zsh.enable = true;

    home-manager.useGlobalPkgs = true;
    home-manager.useUserPackages = true;

    users.users.jack = {
      name = "jack";
      home = "/Users/jack";
    };

    home-manager.users.jack = {pkgs, ...}: {
      home.stateVersion = "23.11";
      home.packages = with pkgs; [
	emacs-pgtk
      ];
    };

    fonts = {
      fontDir.enable = true;
      # fonts = with pkgs; [];
    };

    system = {
      defaults = {
	NSGlobalDomain = {
	  _HIHideMenuBar = false;
	  AppleFontSmoothing = 0;
	  KeyRepeat = 2;
	  InitialKeyRepeat = 15;
	  ApplePressAndHoldEnabled = false;
	};
	dock = {
	  autohide = true;
	};
      };
      keyboard = {
	enableKeyMapping = true;
	remapCapsLockToControl = true;
      };
    };


    homebrew = {
      enable = true;
      onActivation.autoUpdate = true;
      onActivation.cleanup = "uninstall";

      brews = [
	"fvm"
	"cocoapods"
	"dart"
      ];
      casks = [
	"1password"
	"adobe-digital-editions"
	"betterdisplay"
	"calibre"
	"raycast"
	"virtual-desktop-streamer"
	"android-studio"
	"google-chrome"
	"utm"
      ];
      taps = [
	"d12frosted/emacs-plus"
	"dart-lang/dart"
	"leoafarias/fvm"
	"homebrew/bundle"
	"homebrew/cask"
	"homebrew/cask-drivers"
	"homebrew/cask-fonts"
	"homebrew/core"
	"homebrew/services"
      ];
    };
  }
#+end_src
